package program;

import java.awt.Color;
import java.awt.Font;
import java.awt.Rectangle;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.Format;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import database.MySQLConnect;
import java.sql.Statement;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

public class FindPluCode extends javax.swing.JDialog {
     private DefaultTableModel model1;
     private DefaultTableModel model2 ;
     private SimpleDateFormat Datefmtshow = new SimpleDateFormat("dd/mm/yyyy", Locale.ENGLISH);
     private int GetQty ; 

    /** Creates new form FindPluCode */
    public FindPluCode(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        Font myfont = new Font("Norasi", Font.PLAIN, 14);
        initComponents();
        PublicVar.ReturnString = "";
        GetQty = 0 ;
        
        model1 = (DefaultTableModel) tblShowGroup.getModel();
        tblShowGroup.setShowGrid(true);
        tblShowGroup.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblShowGroup.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblShowGroup.setRowSelectionAllowed(true);
        tblShowGroup.setGridColor(Color.gray);

        JTableHeader header = tblShowGroup.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 16));
        int[] ColSize = {80,260};
        for (int i = 0; i < 2; i++) {
            //int vColIndex = 0;
            TableColumn col = tblShowGroup.getColumnModel().getColumn(i);
            col.setPreferredWidth(ColSize[i]);
        }
        DecimalFormat DoubleFmt = new DecimalFormat("##,###,##0.00");
        //Assinge Model2
        
        model2 = (DefaultTableModel) tblShowPlu.getModel();
        tblShowPlu.setShowGrid(true);
        tblShowPlu.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblShowPlu.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblShowPlu.setRowSelectionAllowed(true);
        tblShowPlu.setGridColor(Color.gray);

        JTableHeader header2 = tblShowPlu.getTableHeader();
        header2.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 16));
        int[] ColSize2 = {150,330,100};
        for (int i = 0; i < 3; i++) {
            //int vColIndex = 0;
            TableColumn col = tblShowPlu.getColumnModel().getColumn(i);
            col.setPreferredWidth(ColSize2[i]);
        }
        TableColumnModel tcm = tblShowPlu.getColumnModel();

        TableTestFormatRenderer r = new TableTestFormatRenderer(DoubleFmt);
        r = new TableTestFormatRenderer(DoubleFmt);
        r.setHorizontalAlignment(SwingConstants.RIGHT);
        tcm.getColumn(2).setCellRenderer(r);
        LoadDataGroup() ;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblShowGroup = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblShowPlu = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        bntExit = new javax.swing.JButton();
        bntGroupUp = new javax.swing.JButton();
        bntGroupDown = new javax.swing.JButton();
        bntPluUp = new javax.swing.JButton();
        bntPluDown = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("แสดงรายการรรหัสสินค้า (PLU Llist)");
        setAlwaysOnTop(true);
        setFont(new java.awt.Font("Norasi", 0, 16)); // NOI18N

        tblShowGroup.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tblShowGroup.setFont(new java.awt.Font("Norasi", 0, 18)); // NOI18N
        tblShowGroup.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "รหัสกลุ่ม", "ชื่อกลุ่ม Description"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblShowGroup.setRowHeight(30);
        tblShowGroup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblShowGroupMouseClicked(evt);
            }
        });
        tblShowGroup.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblShowGroupKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblShowGroup);

        tblShowPlu.setFont(new java.awt.Font("Norasi", 0, 18)); // NOI18N
        tblShowPlu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "รหัสสินค้า", "ชื่อสินค้า _(Description)", "ราคาขาย"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblShowPlu.setRowHeight(30);
        tblShowPlu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblShowPluKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblShowPlu);

        jButton1.setFont(new java.awt.Font("Norasi", 0, 16)); // NOI18N
        jButton1.setText("ตกลง (OK)");
        jButton1.setRequestFocusEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        bntExit.setFont(new java.awt.Font("Norasi", 0, 16)); // NOI18N
        bntExit.setText("ออก (Exit)");
        bntExit.setRequestFocusEnabled(false);
        bntExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntExitActionPerformed(evt);
            }
        });

        bntGroupUp.setFont(new java.awt.Font("Norasi", 1, 16)); // NOI18N
        bntGroupUp.setForeground(new java.awt.Color(194, 13, 20));
        bntGroupUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pot1507.gif"))); // NOI18N
        bntGroupUp.setRequestFocusEnabled(false);
        bntGroupUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntGroupUpActionPerformed(evt);
            }
        });

        bntGroupDown.setFont(new java.awt.Font("Norasi", 1, 16)); // NOI18N
        bntGroupDown.setForeground(new java.awt.Color(194, 13, 20));
        bntGroupDown.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pot1508.gif"))); // NOI18N
        bntGroupDown.setRequestFocusEnabled(false);
        bntGroupDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntGroupDownActionPerformed(evt);
            }
        });

        bntPluUp.setFont(new java.awt.Font("Norasi", 1, 16)); // NOI18N
        bntPluUp.setForeground(new java.awt.Color(27, 133, 100));
        bntPluUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pot1507.gif"))); // NOI18N
        bntPluUp.setRequestFocusEnabled(false);
        bntPluUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntPluUpActionPerformed(evt);
            }
        });

        bntPluDown.setFont(new java.awt.Font("Norasi", 1, 16)); // NOI18N
        bntPluDown.setForeground(new java.awt.Color(27, 133, 100));
        bntPluDown.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pot1508.gif"))); // NOI18N
        bntPluDown.setRequestFocusEnabled(false);
        bntPluDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntPluDownActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Norasi", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(9, 7, 114));
        jLabel1.setText("ค้นหา DEPT ที่ต้องการ");

        jLabel2.setFont(new java.awt.Font("Norasi", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(9, 7, 114));
        jLabel2.setText("ค้นหา PLU ที่ต้องการ");

        jLabel3.setFont(new java.awt.Font("Norasi", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(9, 7, 114));
        jLabel3.setText("กดลูกศรซ้าย <-- , ลูกศรขวา ---> เพื่อสลับการค้นหา DEPT และ PLU");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bntGroupUp)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bntGroupDown)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addGap(0, 89, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bntPluUp)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bntPluDown)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bntExit, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addComponent(jLabel3)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 592, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(bntGroupUp, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bntGroupDown, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(bntPluUp, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bntPluDown, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(41, 41, 41))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(633, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bntExit, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                .addGap(58, 58, 58))
        );

        setSize(new java.awt.Dimension(1024, 776));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

private void bntExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntExitActionPerformed
    bntExitClick() ;
}//GEN-LAST:event_bntExitActionPerformed

private void tblShowGroupMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblShowGroupMouseClicked
    LoadDataTotblShowPlu(GetGroupCode()) ;
   
}//GEN-LAST:event_tblShowGroupMouseClicked

private void tblShowPluKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblShowPluKeyPressed
   if (evt.getKeyCode()==KeyEvent.VK_LEFT) {
       tblShowGroup.requestFocus();
   }
   if (evt.getKeyCode()==KeyEvent.VK_ENTER) {
       GetSelectedRow() ;
   }
   if (evt.getKeyCode()==KeyEvent.VK_ESCAPE) {
       bntExitClick() ;
   }
}//GEN-LAST:event_tblShowPluKeyPressed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    tblOKClick();
}//GEN-LAST:event_jButton1ActionPerformed

private void bntGroupUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntGroupUpActionPerformed
        int maxrow;
        int currow = 0;
        String TableSelected = "";
        maxrow = tblShowGroup.getRowCount();
        for (int i = 0; i < maxrow; i++) {
            if (tblShowGroup.isRowSelected(i)) {
                currow = i;
            }
        }
        if (currow>0) {
            showCell(currow-1,0) ;
        }
        LoadDataTotblShowPlu(GetGroupCode()) ;
}//GEN-LAST:event_bntGroupUpActionPerformed

private void bntGroupDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntGroupDownActionPerformed
     int maxrow;
        int currow = 0;
        String TableSelected = "";
        maxrow = tblShowGroup.getRowCount();
        for (int i = 0; i < maxrow; i++) {
            if (tblShowGroup.isRowSelected(i)) {
                currow = i;
            }
        }
        if (currow<maxrow) {
            showCell(currow+1,0) ;
        }
    LoadDataTotblShowPlu(GetGroupCode()) ;
}//GEN-LAST:event_bntGroupDownActionPerformed

private void bntPluUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntPluUpActionPerformed
        int maxrow;
        int currow = 0;
        String TableSelected = "";
        maxrow = tblShowPlu.getRowCount();
        for (int i = 0; i < maxrow; i++) {
            if (tblShowPlu.isRowSelected(i)) {
                currow = i;
            }
        }
        if (currow>0) {
            showCell2(currow-1,0) ;
        }
}//GEN-LAST:event_bntPluUpActionPerformed

private void bntPluDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntPluDownActionPerformed
        int maxrow;
        int currow = 0;
        String TableSelected = "";
        maxrow = tblShowPlu.getRowCount();
        for (int i = 0; i < maxrow; i++) {
            if (tblShowPlu.isRowSelected(i)) {
                currow = i;
            }
        }
        if (currow<maxrow) {
            showCell2(currow+1,0) ;
        }
}//GEN-LAST:event_bntPluDownActionPerformed

    private void tblShowGroupKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblShowGroupKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            LoadDataTotblShowPlu(GetGroupCodeDown());
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            LoadDataTotblShowPlu(GetGroupCodeDown());
        }
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            tblShowPlu.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            LoadDataTotblShowPlu(GetGroupCodeUp());
        }
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            bntExitClick();
        }
    }//GEN-LAST:event_tblShowGroupKeyPressed


public void tblOKClick() {
    GetSelectedRow();
}

public void GetSelectedRow() {
        int maxrow;
        int currow = 0;
        int TempQty = 0 ;
        
        String TableSelected;
        maxrow = tblShowPlu.getRowCount();
        for (int i = 0; i < maxrow; i++) {
            if (tblShowPlu.isRowSelected(i)) {
                currow = i;
            }
        }
        
        TableSelected = tblShowPlu.getValueAt(currow, 0).toString();
        int rows = tblShowPlu.getSelectedRow();
        if (rows != -1) {
        String PCode = tblShowPlu.getValueAt(rows, 0).toString();
        GetQty frm = new GetQty(null, true, PCode);
        frm.setVisible(true);
        TempQty = frm.ReturnQty;
        if (TempQty > 0) {
            PublicVar.ReturnString = TableSelected;
            PublicVar.ReturnQty = TempQty;
            this.dispose();
        } else {
            tblShowPlu.requestFocus();
        }
    }
        
    }

public void bntExitClick() {
    PublicVar.ReturnString = "";
    PublicVar.ReturnQty = 0;
    this.dispose();
}

public void showCell(int row, int column) {
    if(row>0){
        Rectangle rect = tblShowGroup.getCellRect(row, column, true);
        tblShowGroup.scrollRectToVisible(rect);
        tblShowGroup.clearSelection();
        tblShowGroup.setRowSelectionInterval(row, row);
    }
    }

public void showCell2(int row, int column) {
        Rectangle rect = tblShowPlu.getCellRect(row, column, true);
        tblShowPlu.scrollRectToVisible(rect);
        tblShowPlu.clearSelection();
        tblShowPlu.setRowSelectionInterval(row, row);
    }

private void LoadDataGroup() {
        try {
            Statement stmt =  MySQLConnect.con.createStatement();
            String LoadTableFile = "select *from groupfile order by groupcode";
            ResultSet rec = stmt.executeQuery(LoadTableFile);
            Date dt = new Date();
            int RowCount = model1.getRowCount();
            for (int i = 0; i <= RowCount - 1; i++) {
                model1.removeRow(0);
            }
            rec.first();
            if (rec.getRow() == 0) {
            } else {
                do {
                    Object[] input = {rec.getString("groupcode"),
                        ThaiUtil.ASCII2Unicode(rec.getString("groupname"))
                    };
                    model1.addRow(input);
                } while (rec.next());
                RowCount = model1.getRowCount();
                showCell(0,0) ;
                LoadDataTotblShowPlu(GetGroupCode()) ;
            }
            rec.close();
            stmt.close();
        } catch (SQLException e) {
            PUtility.showError(e.getMessage());
        }
    }

public void LoadDataTotblShowPlu(String GroupCode) {
        try {
            Statement stmt =  MySQLConnect.con.createStatement();
            String LoadTableFile = "select *from product where pgroup= '"+GroupCode+"'"+" and pactive='Y' order by pdesc";
            ResultSet rec = stmt.executeQuery(LoadTableFile);
            Date dt = new Date();
            int RowCount = model2.getRowCount();
            for (int i = 0; i <= RowCount - 1; i++) {
                model2.removeRow(0);
            }
            rec.first();
            if (rec.getRow() == 0) {
            } else {
                do {
                    Object[] input = {rec.getString("pcode"),
                        ThaiUtil.ASCII2Unicode(rec.getString("pdesc")),
                        rec.getDouble("pprice11")
                    };
                    model2.addRow(input);
                } while (rec.next());
                RowCount = model2.getRowCount();
                showCell2(0,0) ;
            }
            rec.close();
            stmt.close();
        } catch (SQLException e) {
            PUtility.showError(e.getMessage());
        }
    }

 public String GetGroupCode() {
        int maxrow;
        int currow = 0;
        String TableSelected = "";
        maxrow = tblShowGroup.getRowCount();
        for (int i = 0; i < maxrow; i++) {
            if (tblShowGroup.isRowSelected(i)) {
                currow = i;
            }
        }
        TableSelected = tblShowGroup.getValueAt(currow, 0).toString();
        return TableSelected ;
    }
 
    public String GetGroupCodeDown() {
        int maxrow;
        int currow = 0;
        String tbSelected;
        maxrow = tblShowGroup.getRowCount();
        for (int i = 0; i < maxrow; i++) {
            if (tblShowGroup.isRowSelected(i)) {
                currow = i;
            }
        }
        if ((currow+1) < maxrow) {
            tbSelected = tblShowGroup.getValueAt(currow + 1, 0).toString();
        } else {
            tbSelected = tblShowGroup.getValueAt(currow, 0).toString();
        }
        return tbSelected;
    }
 
 public String GetGroupCodeUp() {
        int maxrow;
        int currow = 0;
        String TableSelected = "";
        maxrow = tblShowGroup.getRowCount();
        for (int i = 0; i < maxrow; i++) {
            if (tblShowGroup.isRowSelected(i)) {
                currow = i;
            }
        }
        if (currow>0) {
            TableSelected = tblShowGroup.getValueAt(currow-1, 0).toString();
        } else {
            TableSelected = tblShowGroup.getValueAt(currow, 0).toString();
        }
        return TableSelected ;
    }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        new MySQLConnect();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FindPluCode dialog = new FindPluCode(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntExit;
    private javax.swing.JButton bntGroupDown;
    private javax.swing.JButton bntGroupUp;
    private javax.swing.JButton bntPluDown;
    private javax.swing.JButton bntPluUp;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblShowGroup;
    private javax.swing.JTable tblShowPlu;
    // End of variables declaration//GEN-END:variables

        public class TableTestFormatRenderer extends DefaultTableCellRenderer {

        private Format formatter;

        public TableTestFormatRenderer(Format formatter) {
            if (formatter == null) {
                throw new NullPointerException();
            }
            this.formatter = formatter;
        }

        protected void setValue(Object obj) {
            setText(obj == null ? "" : formatter.format(obj));
        }
        
    }
}
