package program;

import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import database.MySQLConnect;
import java.sql.Statement;

public class DiscountClassify extends javax.swing.JDialog {

    SimpleDateFormat Datefmt = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH);
    SimpleDateFormat DatefmtShow = new SimpleDateFormat("dd/MM/yyyy", Locale.ENGLISH);
    SimpleDateFormat Timefmt = new SimpleDateFormat("HH:mm:ss");
    Date date = new Date();
    Date TDate1 = new Date();
    Date TDate2 = new Date();
    PPrint prn = new PPrint();
    SimpleDateFormat DatefmtThai = new SimpleDateFormat("dd/MM/yyyy(HH:mm)", Locale.ENGLISH);
    SimpleDateFormat ShowDatefmt = new SimpleDateFormat("dd/MM/yyyy", Locale.ENGLISH);
    DecimalFormat DecFmt = new DecimalFormat("##,###,##0.00");
    DecimalFormat IntFmt = new DecimalFormat("##,###,##0");
    private POSHWSetup POSHW;

    public DiscountClassify(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        POSHW = POSHWSetup.Bean(Value.getMacno());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bntOK = new javax.swing.JButton();
        bntExit = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("รายงานการขายแยกประเภทส่วนลด (Sale & Discount Classify Report)");
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        bntOK.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        bntOK.setText("F5- พิมพ์");
        bntOK.setFocusable(false);
        bntOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntOKActionPerformed(evt);
            }
        });

        bntExit.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        bntExit.setText("ESC- ออก");
        bntExit.setFocusable(false);
        bntExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntExitActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.lightGray, 2));

        jLabel1.setFont(new java.awt.Font("Norasi", 1, 20)); // NOI18N
        jLabel1.setText("แสดงรวมทุกเครื่อง");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(bntOK, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bntExit, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bntOK, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bntExit, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

private void bntOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntOKActionPerformed
    bntOKClick();
}//GEN-LAST:event_bntOKActionPerformed

private void bntExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntExitActionPerformed
    bntExitClick();
}//GEN-LAST:event_bntExitActionPerformed

private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
    if (evt.getKeyCode()==KeyEvent.VK_F5) {
        bntOKClick() ;
    }
    if (evt.getKeyCode()==KeyEvent.VK_ESCAPE) {
        bntExitClick() ;
    }
}//GEN-LAST:event_formKeyPressed

    public void bntExitClick() {
        this.dispose();
    }

    public void bntOKClick() {
        Date SaleDate = new Date();
        Double SumA = 0.0;
        Double SumB = 0.0;
        Double SumC = 0.0;
        Double SumD = 0.0;
        Double SumE = 0.0;
        Double SumF = 0.0;
        Double SumG = 0.0;
        Double SumH = 0.0;
        Double SumX = 0.0;
        Double SumEarnest = 0.0;
        Double SumBath = 0.0;
        Double XDiscQty = 0.0;
        Double XDiscQtySum = 0.0;

        try {
            Statement stmt =  MySQLConnect.con.createStatement();
            String SqlQuery = "select sum(b_earnest) from billno where (b_void<>'V')";
            //String SqlQuery = "select sum(b_earnest) from s_invoice where (b_void<>'V') and (s_date='2011-01-01')";
            ResultSet rec = stmt.executeQuery(SqlQuery);
            rec.first();
            if (rec.getRow() == 0) {
            } else {
                do {
                    SumEarnest = rec.getDouble("sum(b_earnest)");
                } while (rec.next());
            }
            rec.close();
            stmt.close();
        } catch (SQLException e) {
            PUtility.showError(e.getMessage());
        }
        try {
            Statement stmt =  MySQLConnect.con.createStatement();
            String SqlQuery = "select *from t_sale left join protab on r_prcode=procode left join cupon on cucode=r_prcucode " +
                    "where (r_void<>'V') and (r_refund<>'V') ";
            //String SqlQuery = "select *from s_tran left join protab on r_prcode=procode left join cupon on cucode=r_prcucode " +
            //          "where (r_void<>'V') and (r_refund<>'V') and (s_date='2011-01-01') ";
            ResultSet rec = stmt.executeQuery(SqlQuery);
            rec.first();
            if (rec.getRow() == 0) {
            } else {
                do {
                    XDiscQty = 0.0;
                    XDiscQtySum = 0.0;
                    String TempType = rec.getString("r_prtype");
                    String TempCuType = rec.getString("r_prcutype");
                    String TempSubType = rec.getString("r_prsubtype");
                    String TempChkType = rec.getString("r_prchktype");
                    String TempCuCode = rec.getString("r_prcucode");
                    SumA = SumA + rec.getDouble("r_total");
                    SumD = SumD + rec.getDouble("r_discbath") + rec.getDouble("r_prcubath");
                    SumBath = SumBath + rec.getDouble("r_discbath") + rec.getDouble("r_prcubath");
                    if ((TempType.equals("")) & (TempCuType.equals("")) & (TempSubType.equals(""))) {
                        SumB = SumB + rec.getDouble("r_total");
                    } else {
                        if (!TempType.equals("")) { //แบบเก่า

                            if (TempChkType.equals("")) {
                                if (PublicVar.Branch_PromotionGP.indexOf(TempType) > 0) {
                                    XDiscQty = rec.getDouble("r_quan");
                                    XDiscQtySum = XDiscQtySum + XDiscQty;
                                    SumC = SumC + rec.getDouble("r_total");
                                    SumE = SumE + rec.getDouble("r_pramt") + rec.getDouble("r_prcuamt") - rec.getDouble("r_pradj");
                                } else {
                                    XDiscQty = rec.getDouble("r_quan");
                                    XDiscQtySum = XDiscQtySum + XDiscQty;
                                    SumB = SumB + rec.getDouble("r_total");
                                    SumD = SumD + rec.getDouble("r_pramt") + rec.getDouble("r_prcuamt") - rec.getDouble("r_pradj");
                                }
                                TempCuType = "";
                            } else { // แบบใหม่
                                //Promotion

                                if (rec.getDouble("r_prquan") + rec.getDouble("r_prquan2") > 0) {
                                    if (PublicVar.Branch_PromotionGP.indexOf(TempType) > 0) {
                                        XDiscQty = rec.getDouble("r_prquan")+rec.getDouble("r_prquan2"); //
                                        XDiscQtySum = XDiscQtySum + XDiscQty;
                                        SumC = SumC + ((rec.getDouble("r_prquan") + rec.getDouble("r_prquan2")) * rec.getDouble("r_price"));
                                        SumE = SumE + rec.getDouble("r_pramt") + rec.getDouble("r_pramt2") - rec.getDouble("r_pradj");

                                    } else {
                                        XDiscQty = rec.getDouble("r_prquan")+rec.getDouble("r_prquan2");//
                                        XDiscQtySum = XDiscQtySum + XDiscQty;
                                        SumB = SumB + ((rec.getDouble("r_prquan") + rec.getDouble("r_prquan2")) * rec.getDouble("r_price"));
                                        SumD = SumD + rec.getDouble("r_pramt") + rec.getDouble("r_pramt2") - rec.getDouble("r_pradj");
                                    }
                                }
                            }
                        }
                        if (!TempSubType.equals("")) {
                            if (PublicVar.Branch_PromotionGP.indexOf(TempSubType) > 0) {
                                XDiscQty = rec.getDouble("r_prsubquan");
                                XDiscQtySum = XDiscQtySum + XDiscQty;
                                SumC = SumC + (rec.getDouble("r_prsubquan") * rec.getDouble("r_price"));
                                SumE = SumE + rec.getDouble("r_prsubamt") - rec.getDouble("r_prsubadj");
                            } else {
                                XDiscQty = rec.getDouble("r_prsubquan");
                                XDiscQtySum = XDiscQtySum + XDiscQty;
                                SumB = SumB + (rec.getDouble("r_prsubquan") * rec.getDouble("r_price"));
                                SumD = SumD + rec.getDouble("r_prsubamt") - rec.getDouble("r_prsubadj");
                            }
                        }
                        if (!TempCuType.equals("")) {
                            if (PublicVar.Branch_PromotionGP.indexOf(TempCuType) > 0) {
                                XDiscQty = rec.getDouble("r_prcuquan");
                                XDiscQtySum = XDiscQtySum + XDiscQty;
                                SumC = SumC + (rec.getDouble("r_prcuquan") * rec.getDouble("r_price"));
                                SumE = SumE + rec.getDouble("r_prcuamt") - rec.getDouble("r_prcuadj");
                            } else {
                                XDiscQty = rec.getDouble("r_prcuquan");
                                XDiscQtySum = XDiscQtySum + XDiscQty;
                                SumB = SumB + (rec.getDouble("r_prcuquan") * rec.getDouble("r_price"));
                                SumD = SumD + rec.getDouble("r_prcuamt") - rec.getDouble("r_prcuadj");
                            }
                        }
                        if (XDiscQtySum < rec.getDouble("r_quan")) {
                            SumB = SumB + (rec.getDouble("r_price") * (rec.getDouble("r_quan") - XDiscQtySum));
                        }
                    }
                } while (rec.next());
            }
            SumF = SumA - SumD - SumE - SumEarnest;
            SumG = SumB - SumD - SumEarnest;
            SumH = SumC - SumE;
            rec.close();
            stmt.close();
        } catch (SQLException e) {
            PUtility.showError(e.getMessage());
        }
        //Delete GPHead
        try {
            Statement stmt =  MySQLConnect.con.createStatement();
            String SqlQuery = "delete from tempgpheader";
            stmt.executeUpdate(SqlQuery);
            stmt.close();
        } catch (SQLException e) {
            PUtility.showError(e.getMessage());
        }
        //Delete GPDetail
        try {
            Statement stmt =  MySQLConnect.con.createStatement();
            String SqlQuery = "delete from tempgpdetail";
            stmt.executeUpdate(SqlQuery);
            stmt.close();
        } catch (SQLException e) {
            PUtility.showError(e.getMessage());
        }
        InsertGPHead(Datefmt.format(SaleDate), PublicVar.Branch_Code, SumA, SumB, SumC, SumD, SumE, SumF, SumG, SumH, SumEarnest);
        SumBath = 0.0;
        try {
            Statement stmt =  MySQLConnect.con.createStatement();
            String SqlQuery = "select *from t_sale left join protab on r_prcode=procode left join cupon on cucode=r_prcucode " +
                    "where (r_void<>'V') and (r_refund<>'V') ";
            //String SqlQuery = "select *from s_tran left join protab on r_prcode=procode left join cupon on cucode=r_prcucode " +
            //        "where (r_void<>'V') and (r_refund<>'V') and  (s_date='2011-01-01') ";
            ResultSet rec = stmt.executeQuery(SqlQuery);
            rec.first();
            if (rec.getRow() == 0) {
            } else {
                do {
                    XDiscQty = 0.0;
                    XDiscQtySum = 0.0;
                    SumBath = SumBath + rec.getDouble("r_discbath") + rec.getDouble("r_prcubath");
                    String PTType = rec.getString("r_prtype");
                    String PTCode = "";
                    String TempChkType = rec.getString("r_prchktype");
                    String TempCuType = rec.getString("r_prcutype");
                    String TempSubType = rec.getString("r_prsubtype");
                    String TempCuCode = rec.getString("r_prcucode");
                    String PTName = "";
                    if ((PTType.equals("")) & (TempSubType.equals("")) & (TempCuType.equals(""))) {
                        XDiscQty = rec.getDouble("r_quan");
                        XDiscQtySum = XDiscQtySum + XDiscQty;
                        PTType = "-N";
                        PTCode = "";
                        SumA = rec.getDouble("r_total");
                        SumB = rec.getDouble("r_quan");
                        SumC = rec.getDouble("r_pramt") - rec.getDouble("r_pradj");
                        SumD = SumA - SumC;
                        if (SeekGPDetail(Datefmt.format(SaleDate), PublicVar.Branch_Code, PTType, PTCode)) {
                            UpdateGPDetail(Datefmt.format(SaleDate), PublicVar.Branch_Code, PTType, PTCode, PTName, SumA, SumB, SumC, SumD);
                        } else {
                            InsertGPDetail(Datefmt.format(SaleDate), PublicVar.Branch_Code, PTType, PTCode, PTName, SumA, SumB, SumC, SumD);
                        }
                    } else {
                        if (!PTType.equals("")) {
                            if (TempChkType.equals("")) { //แบบเก่า

                                if ((PTType.equals("-C")) & (!rec.getString("r_prcucode").equals(""))) {
                                    XDiscQty = rec.getDouble("r_quan");
                                    XDiscQtySum = XDiscQtySum + XDiscQty;
                                    PTCode = rec.getString("r_prcucode");
                                    PTName = rec.getString("cuname");
                                    SumA = rec.getDouble("r_total");
                                    SumB = rec.getDouble("r_quan");
                                    SumC = rec.getDouble("r_pramt") + rec.getDouble("r_prcuamt") - rec.getDouble("r_pradj");
                                    SumD = SumA - SumC;
                                } else {
                                    XDiscQty = rec.getDouble("r_quan");
                                    XDiscQtySum = XDiscQtySum + XDiscQty;
                                    PTCode = rec.getString("r_prcode");
                                    PTName = rec.getString("prodesc");
                                    SumA = rec.getDouble("r_total");
                                    SumB = rec.getDouble("r_quan");
                                    SumC = rec.getDouble("r_pramt") + rec.getDouble("r_prcuamt") - rec.getDouble("r_pradj");
                                    SumD = SumA - SumC;
                                }
                                if (SeekGPDetail(Datefmt.format(SaleDate), PublicVar.Branch_Code, PTType, PTCode)) {
                                    UpdateGPDetail(Datefmt.format(SaleDate), PublicVar.Branch_Code, PTType, PTCode, PTName, SumA, SumB, SumC, SumD);
                                } else {
                                    InsertGPDetail(Datefmt.format(SaleDate), PublicVar.Branch_Code, PTType, PTCode, PTName, SumA, SumB, SumC, SumD);
                                }
                                TempCuType = "";
                            } else {
                                Boolean ChkPro1OK = false;
                                if (rec.getDouble("r_prquan") > 0) {
                                    ChkPro1OK = true;
                                    XDiscQty = rec.getDouble("r_quan");
                                    XDiscQtySum = XDiscQtySum + XDiscQty;
                                    PTCode = rec.getString("r_prcode");
                                    PTName = rec.getString("prodesc");
                                    SumA = rec.getDouble("r_price") * rec.getDouble("r_prquan");
                                    SumB = rec.getDouble("r_quan");
                                    SumC = rec.getDouble("r_pramt") - rec.getDouble("r_pradj");
                                    SumD = SumA - SumC;
                                    if (SeekGPDetail(Datefmt.format(SaleDate), PublicVar.Branch_Code, PTType, PTCode)) {
                                        UpdateGPDetail(Datefmt.format(SaleDate), PublicVar.Branch_Code, PTType, PTCode, PTName, SumA, SumB, SumC, SumD);
                                    } else {
                                        InsertGPDetail(Datefmt.format(SaleDate), PublicVar.Branch_Code, PTType, PTCode, PTName, SumA, SumB, SumC, SumD);
                                    }
                                }
                                if (rec.getDouble("r_prquan2") > 0) {
                                    XDiscQty = rec.getDouble("r_quan2");
                                    XDiscQtySum = XDiscQtySum + XDiscQty;
                                    PTCode = rec.getString("r_prcode2");
                                    PTName = PUtility.SeekPromotionName(PTCode);
                                    SumA = rec.getDouble("r_price") * rec.getDouble("r_prquan2");
                                    SumB = rec.getDouble("r_quan2");
                                    if (ChkPro1OK) {
                                        SumC = rec.getDouble("r_pramt2");
                                    } else {
                                        SumC = rec.getDouble("r_pramt2") - rec.getDouble("r_pradj");
                                    }
                                    SumD = SumA - SumC;
                                    if (SeekGPDetail(Datefmt.format(SaleDate), PublicVar.Branch_Code, PTType, PTCode)) {
                                        UpdateGPDetail(Datefmt.format(SaleDate), PublicVar.Branch_Code, PTType, PTCode, PTName, SumA, SumB, SumC, SumD);
                                    } else {
                                        InsertGPDetail(Datefmt.format(SaleDate), PublicVar.Branch_Code, PTType, PTCode, PTName, SumA, SumB, SumC, SumD);
                                    }
                                }
                            }
                        }
                        if ((!TempCuType.equals("")) & (!TempCuCode.equals(""))) {
                            PTType = TempCuType;
                            XDiscQty = rec.getDouble("r_prcuquan");
                            XDiscQtySum = XDiscQtySum + XDiscQty;
                            PTCode = rec.getString("r_prcucode");
                            PTName = rec.getString("cuname");
                            SumA = rec.getDouble("r_price") * rec.getDouble("r_prcuquan");
                            SumB = rec.getDouble("r_prcuquan");
                            SumC = rec.getDouble("r_prcuamt") - rec.getDouble("r_prcuadj");
                            SumD = SumA - SumC;
                            if (SeekGPDetail(Datefmt.format(SaleDate), PublicVar.Branch_Code, PTType, PTCode)) {
                                UpdateGPDetail(Datefmt.format(SaleDate), PublicVar.Branch_Code, PTType, PTCode, PTName, SumA, SumB, SumC, SumD);
                            } else {
                                InsertGPDetail(Datefmt.format(SaleDate), PublicVar.Branch_Code, PTType, PTCode, PTName, SumA, SumB, SumC, SumD);
                            }
                        }
                        if (!TempSubType.equals("")) {
                            PTType = TempSubType;
                            XDiscQty = rec.getDouble("r_prSubquan");
                            XDiscQtySum = XDiscQtySum + XDiscQty;
                            PTCode = rec.getString("r_prSubcode");
                            PTName = rec.getString("prodesc");
                            SumA = rec.getDouble("r_price") * rec.getDouble("r_prsubquan");
                            SumB = rec.getDouble("r_prsubquan");
                            SumC = rec.getDouble("r_prsubamt") - rec.getDouble("r_prsubadj");
                            SumD = SumA - SumC;
                            if (SeekGPDetail(Datefmt.format(SaleDate), PublicVar.Branch_Code, PTType, PTCode)) {
                                UpdateGPDetail(Datefmt.format(SaleDate), PublicVar.Branch_Code, PTType, PTCode, PTName, SumA, SumB, SumC, SumD);
                            } else {
                                InsertGPDetail(Datefmt.format(SaleDate), PublicVar.Branch_Code, PTType, PTCode, PTName, SumA, SumB, SumC, SumD);
                            }
                        }
                    }
                    if (XDiscQtySum < rec.getDouble("r_quan")) {
                        PTType = "-N";
                        PTCode = "";
                        PTName = "";
                        SumA = rec.getDouble("r_price") * (rec.getDouble("r_quan") - XDiscQtySum);
                        SumB = rec.getDouble("r_quan") - XDiscQtySum;
                        SumC = 0.0;
                        SumD = SumA - SumC;
                        if (SeekGPDetail(Datefmt.format(SaleDate), PublicVar.Branch_Code, PTType, PTCode)) {
                            UpdateGPDetail(Datefmt.format(SaleDate), PublicVar.Branch_Code, PTType, PTCode, PTName, SumA, SumB, SumC, SumD);
                        } else {
                            InsertGPDetail(Datefmt.format(SaleDate), PublicVar.Branch_Code, PTType, PTCode, PTName, SumA, SumB, SumC, SumD);
                        }
                    }
                } while (rec.next());
            }
            rec.close();
            stmt.close();
        } catch (SQLException e) {
            PUtility.showError(e.getMessage());
        }
        InsertGPDetail(Datefmt.format(SaleDate), PublicVar.Branch_Code, "-B", "", "", 0.0, 0.0, SumBath, 0.0);
        InsertGPDetail(Datefmt.format(SaleDate), PublicVar.Branch_Code, "-A", "", "", 0.0, 0.0, SumEarnest, 0.0);
        PrintProc();
    }

    public void PrintProc() {
        Date SaleDate = new Date();
        String PTCode = "" ;
        Double SumD = 0.0 ;
        Double SumC = 0.0 ;
        if (!Value.getComPort().equals("NONE")) {
            if (prn.OpenPrint(Value.getComPort())) {
                prn.InitPrinter();
                prn.print(POSHW.getHeading1());
                prn.print(POSHW.getHeading2());
                prn.print(POSHW.getHeading3());
                prn.print(POSHW.getHeading4());
                prn.print("REG ID :" + Value.MACNO);
                prn.print("    รายงานการขายแบบแยกประเภทส่วนลด");
                prn.print("             รวมทุกเครื่อง");
                prn.print(" ");
                prn.print(DatefmtThai.format(date) + " " + "Cashier:" + PublicVar._User + " Mac:" + Value.MACNO);
                prn.print("----------------------------------------");
                try {
                    Statement stmt =  MySQLConnect.con.createStatement();
                    String SqlQuery = "Select s_bran,sum(dept_sum),sum(normal_sale),sum(promotion_sale),sum(normal_disc),sum(promotion_disc),sum(net_sale),sum(normal_net),sum(promotion_net),sum(earnest) from tempgpheader " +
                            "where (s_date>='" + Datefmt.format(SaleDate) + "') and (s_date<='" + Datefmt.format(SaleDate) + "') group by s_bran ";
                    ResultSet rec = stmt.executeQuery(SqlQuery);
                    rec.first();
                    if (rec.getRow() == 0) {
                    } else {
                        do {
                            prn.print(PUtility.DataFullR("ยอดขายตามป้าย(ก่อนส่วนลด)        ", 26) + PUtility.DataFull(DecFmt.format(rec.getDouble("sum(dept_sum)")), 13));
                            prn.print(PUtility.DataFullR("ยอด Gross ปกติ                 ", 26) + PUtility.DataFull(DecFmt.format(rec.getDouble("sum(normal_sale)")), 13));
                            prn.print(PUtility.DataFullR("ยอด Gross Promotion           ", 26) + PUtility.DataFull(DecFmt.format(rec.getDouble("sum(promotion_sale)")), 13));
                            prn.print(PUtility.DataFullR("ส่วนลด GP ปกติ                  ", 26) + PUtility.DataFull(DecFmt.format(rec.getDouble("sum(normal_disc)")), 13));
                            prn.print(PUtility.DataFullR("ส่วนลด GP Promotion            ", 26) + PUtility.DataFull(DecFmt.format(rec.getDouble("sum(promotion_disc)")), 13));
                            prn.print(PUtility.DataFullR("หักเงินมัดจำ                     ", 26) + PUtility.DataFull(DecFmt.format(rec.getDouble("sum(earnest)")), 13));
                            prn.print(PUtility.DataFullR("ยอดขายสุทธิ                     ", 26) + PUtility.DataFull(DecFmt.format(rec.getDouble("sum(net_sale)")), 13));
                            prn.print("*****ยอดส่งห้าง*****")  ;
                            prn.print(PUtility.DataFullR("ยอดขายสุทธิ GP ปกติ              ", 26) + PUtility.DataFull(DecFmt.format(rec.getDouble("sum(normal_net)")), 13));
                            prn.print(PUtility.DataFullR("ยอดขายสุทธิ GP Promotion        ", 26) + PUtility.DataFull(DecFmt.format(rec.getDouble("sum(promotion_net)")), 13));
                            prn.print(PUtility.DataFullR("ยอดขายสุทธิ                     ", 26) + PUtility.DataFull(DecFmt.format(rec.getDouble("sum(net_sale)")), 13));
                            prn.print("-----------------------------------------") ;
                            prn.print("     ***** รายละเอียดการให้ส่วนลด *****     ") ;
                            prn.print("-----------------------------------------") ;
                            prn.print("ประเภท/ชื่อรายการ");
                            prn.print("     ยอดขาย  จำนวนชิ้น   ส่วนลด        สุทธิ");
                            prn.print("-----------------------------------------") ;
                        } while (rec.next());
                    }
                    rec.close();
                    stmt.close();
                } catch (SQLException e) {
                    PUtility.showError(e.getMessage());
                }
                try {
                    Statement stmt =  MySQLConnect.con.createStatement();
                    String SqlQuery = "select s_bran,p_type,p_code,p_name,sum(p_gross),sum(p_qty),sum(p_disc),sum(p_net) from tempgpdetail " +
                            "where (s_date>='"+Datefmt.format(SaleDate)+"') and (s_date<='"+Datefmt.format(SaleDate)+"') group by p_type,p_code ";
                    ResultSet rec = stmt.executeQuery(SqlQuery);
                    rec.first();
                    if (rec.getRow() == 0) {
                    } else {
                        prn.print("1) Promotion ") ;
                        do {
                            if (rec.getString("p_type").equals("-P")) {
                                SumC=SumC+rec.getDouble("sum(p_disc)") ;
                                SumD=SumD+rec.getDouble("sum(p_net)") ;
                                prn.print("  --"+rec.getString("p_name"));
                                prn.print("  "+PUtility.DataFull(DecFmt.format(rec.getDouble("sum(p_gross)")), 10)+PUtility.DataFull(IntFmt.format(rec.getDouble("sum(p_qty)")), 6)+PUtility.DataFull(DecFmt.format(rec.getDouble("sum(p_disc)")), 10)+PUtility.DataFull(DecFmt.format(rec.getDouble("sum(p_net)")), 12));
                                
                            }
                            
                        } while (rec.next());
                    }
                    
                    rec.first();
                    if (rec.getRow() == 0) {
                    } else {
                        prn.print("2) ลดตามรายการ ") ;
                        do {
                            if (rec.getString("p_type").equals("-I")) {
                                SumC=SumC+rec.getDouble("sum(p_disc)") ;
                                SumD=SumD+rec.getDouble("sum(p_net)") ;
                                prn.print("  "+PUtility.DataFull(DecFmt.format(rec.getDouble("sum(p_gross)")), 10)+PUtility.DataFull(IntFmt.format(rec.getDouble("sum(p_qty)")), 6)+PUtility.DataFull(DecFmt.format(rec.getDouble("sum(p_disc)")), 10)+PUtility.DataFull(DecFmt.format(rec.getDouble("sum(p_net)")), 12));
                            }
                            
                        } while (rec.next());
                    }
                    
                    rec.first();
                    if (rec.getRow() == 0) {
                    } else {
                        prn.print("3) ส่วนลดเทศกาล ") ;
                        do {
                            if (rec.getString("p_type").equals("-F")) {
                                SumC=SumC+rec.getDouble("sum(p_disc)") ;
                                SumD=SumD+rec.getDouble("sum(p_net)") ;
                                prn.print("  "+PUtility.DataFull(DecFmt.format(rec.getDouble("sum(p_gross)")), 10)+PUtility.DataFull(IntFmt.format(rec.getDouble("sum(p_qty)")), 6)+PUtility.DataFull(DecFmt.format(rec.getDouble("sum(p_disc)")), 10)+PUtility.DataFull(DecFmt.format(rec.getDouble("sum(p_net)")), 12));
                            }
                            
                        } while (rec.next());
                    }
                    
                    rec.first();
                    if (rec.getRow() == 0) {
                    } else {
                        prn.print("4) ส่วนลดคูปอง ") ;
                        do {
                            if (rec.getString("p_type").equals("-S")) {
                                SumC=SumC+rec.getDouble("sum(p_disc)") ;
                                SumD=SumD+rec.getDouble("sum(p_net)") ;
                                prn.print("  "+PUtility.DataFull(DecFmt.format(rec.getDouble("sum(p_gross)")), 10)+PUtility.DataFull(IntFmt.format(rec.getDouble("sum(p_qty)")), 6)+PUtility.DataFull(DecFmt.format(rec.getDouble("sum(p_disc)")), 10)+PUtility.DataFull(DecFmt.format(rec.getDouble("sum(p_net)")), 12));
                            }
                            
                        } while (rec.next());
                    }
                    
                    rec.first();
                    if (rec.getRow() == 0) {
                    } else {
                        prn.print("5) ส่วนลดคูปองพิเศษ ") ;
                        do {
                            if (rec.getString("p_type").equals("-C")) {
                                SumC=SumC+rec.getDouble("sum(p_disc)") ;
                                SumD=SumD+rec.getDouble("sum(p_net)") ;
                                prn.print("  "+PUtility.DataFull(DecFmt.format(rec.getDouble("sum(p_gross)")), 10)+PUtility.DataFull(IntFmt.format(rec.getDouble("sum(p_qty)")), 6)+PUtility.DataFull(DecFmt.format(rec.getDouble("sum(p_disc)")), 10)+PUtility.DataFull(DecFmt.format(rec.getDouble("sum(p_net)")), 12));
                            }
                            
                        } while (rec.next());
                    }
                    
                    rec.first();
                    if (rec.getRow() == 0) {
                    } else {
                        prn.print("6) ส่วนลดพนักงาน ") ;
                        do {
                            if (rec.getString("p_type").equals("-E")) {
                                SumC=SumC+rec.getDouble("sum(p_disc)") ;
                                SumD=SumD+rec.getDouble("sum(p_net)") ;
                                prn.print("  "+PUtility.DataFull(DecFmt.format(rec.getDouble("sum(p_gross)")), 10)+PUtility.DataFull(IntFmt.format(rec.getDouble("sum(p_qty)")), 6)+PUtility.DataFull(DecFmt.format(rec.getDouble("sum(p_disc)")), 10)+PUtility.DataFull(DecFmt.format(rec.getDouble("sum(p_net)")), 12));
                            }
                            
                        } while (rec.next());
                    }
                    
                    rec.first();
                    if (rec.getRow() == 0) {
                    } else {
                        prn.print("7) ส่วนลดสมาชิก ") ;
                        do {
                            if (rec.getString("p_type").equals("-M")) {
                                SumC=SumC+rec.getDouble("sum(p_disc)") ;
                                SumD=SumD+rec.getDouble("sum(p_net)") ;
                                prn.print("  "+PUtility.DataFull(DecFmt.format(rec.getDouble("sum(p_gross)")), 10)+PUtility.DataFull(IntFmt.format(rec.getDouble("sum(p_qty)")), 6)+PUtility.DataFull(DecFmt.format(rec.getDouble("sum(p_disc)")), 10)+PUtility.DataFull(DecFmt.format(rec.getDouble("sum(p_net)")), 12));
                            }
                            
                        } while (rec.next());
                    }
                    
                    rec.first();
                    if (rec.getRow() == 0) {
                    } else {
                        prn.print("8) ส่วนลด Trainee ") ;
                        do {
                            if (rec.getString("p_type").equals("-T")) {
                                SumC=SumC+rec.getDouble("sum(p_disc)") ;
                                SumD=SumD+rec.getDouble("sum(p_net)") ;
                                prn.print("  "+PUtility.DataFull(DecFmt.format(rec.getDouble("sum(p_gross)")), 10)+PUtility.DataFull(IntFmt.format(rec.getDouble("sum(p_qty)")), 6)+PUtility.DataFull(DecFmt.format(rec.getDouble("sum(p_disc)")), 10)+PUtility.DataFull(DecFmt.format(rec.getDouble("sum(p_net)")), 12));
                            }
                            
                        } while (rec.next());
                    }
                    
                    rec.first();
                    if (rec.getRow() == 0) {
                    } else {
                        prn.print("9) ส่วนลดบาท ") ;
                        do {
                            if (rec.getString("p_type").equals("-B")) {
                                SumC=SumC+rec.getDouble("sum(p_disc)") ;
                                SumD=SumD+rec.getDouble("sum(p_net)") ;
                                prn.print("  "+PUtility.DataFull(DecFmt.format(rec.getDouble("sum(p_gross)")), 10)+PUtility.DataFull(IntFmt.format(rec.getDouble("sum(p_qty)")), 6)+PUtility.DataFull(DecFmt.format(rec.getDouble("sum(p_disc)")), 10)+PUtility.DataFull(DecFmt.format(rec.getDouble("sum(p_net)")), 12));
                            }
                            
                        } while (rec.next());
                    }
                   
                    rec.first();
                    if (rec.getRow() == 0) {
                    } else {
                        prn.print("10) หักคืนเงินมัดจำ ") ;
                        do {
                            if (rec.getString("p_type").equals("-A")) {
                                SumC=SumC+rec.getDouble("sum(p_disc)") ;
                                SumD=SumD+rec.getDouble("sum(p_net)") ;
                                prn.print("  "+PUtility.DataFull(DecFmt.format(rec.getDouble("sum(p_gross)")), 10)+PUtility.DataFull(IntFmt.format(rec.getDouble("sum(p_qty)")), 6)+PUtility.DataFull(DecFmt.format(rec.getDouble("sum(p_disc)")), 10)+PUtility.DataFull(DecFmt.format(rec.getDouble("sum(p_net)")), 12));
                            }
                            
                        } while (rec.next());
                    }
                    rec.close();
                    stmt.close();
                } catch (SQLException e) {
                    PUtility.showError(e.getMessage());
                }
                prn.print("----------------------------------------");
                prn.print("                  "+PUtility.DataFull(DecFmt.format(SumC), 10)+PUtility.DataFull(DecFmt.format(SumD), 12)) ;
                prn.print("----------------------------------------");
                prn.print(" ");
                prn.print(" ");
                prn.print(" ");
                
                prn.CutPaper();
                prn.closePrint();
            } else {
//                PUtility.showError("เครื่องพิมพ์ใบกำกับภาษีไม่สามารถพิมพ์ได้ ...");
            }
        }

    }

    public void InsertGPHead(String SaleDate, String TBran, Double SumA, Double SumB, Double SumC, Double SumD, Double SumE, Double SumF, Double SumG, Double SumH, Double SumEarnest) {
        try {
            Statement stmt =  MySQLConnect.con.createStatement();
            String SqlQuery = "insert into tempgpheader (s_date,s_bran,dept_sum,normal_sale,promotion_sale,normal_disc,promotion_disc,net_sale,normal_net,promotion_net,earnest) " +
                    "values ('" + SaleDate + "'," + "'" + TBran + "'," + SumA + "," + SumB + "," + SumC + "," + SumD + "," + SumE + "," + SumF + "," + SumG + "," + SumH + "," + SumEarnest + ")";
            stmt.executeUpdate(SqlQuery);
            stmt.close();
        } catch (SQLException e) {
            PUtility.showError(e.getMessage());
        }
    }

    public Boolean SeekGPDetail(String SaleDate, String TBran, String PTType, String PTCode) {
        Boolean ReturnVal = false;
        try {
            Statement stmt =  MySQLConnect.con.createStatement();
            String SqlQuery = "select *from tempgpdetail where (s_date='" + SaleDate + "') and (s_bran='" + TBran + "') and (p_type='" + PTType + "') and (p_code='" + PTCode + "') ";
            ResultSet rec = stmt.executeQuery(SqlQuery);
            rec.first();
            if (rec.getRow() == 0) {
                ReturnVal = false;
            } else {
                ReturnVal = true;
            }
            rec.close();
            stmt.close();
        } catch (SQLException e) {
            PUtility.showError(e.getMessage());
        }
        return ReturnVal;
    }

    public void InsertGPDetail(String SaleDate, String TBran, String PTType, String PTCode, String PTName, Double SumA, Double SumB, Double SumC, Double SumD) {
        try {
            Statement stmt =  MySQLConnect.con.createStatement();
            String SqlQuery = "insert into tempgpdetail (s_date,s_bran,p_type,p_code,p_name,p_gross,p_qty,p_disc,p_net) " +
                    "values ('" + SaleDate + "','" + TBran + "','" + PTType + "','" + PTCode + "','" + PTName + "'," + SumA + "," + SumB + "," + SumC + "," + SumD + ")";
            stmt.executeUpdate(SqlQuery);
            stmt.close();
        } catch (SQLException e) {
            PUtility.showError(e.getMessage());
        }
    }

    public void UpdateGPDetail(String SaleDate, String TBran, String PTType, String PTCode, String PTName, Double SumA, Double SumB, Double SumC, Double SumD) {
        try {
            Statement stmt =  MySQLConnect.con.createStatement();
            String SqlQuery = "update tempgpdetail set p_name='" + PTName + "',p_gross=p_gross+" + SumA + ",p_qty=p_qty+" + SumB + ",p_disc=p_disc+" + SumC + ",p_net=p_net+" + SumD + "  " +
                    "where (s_date='" + SaleDate + "') and (s_bran='" + TBran + "') and (p_type='" + PTType + "') and (p_code='" + PTCode + "') ";

            stmt.executeUpdate(SqlQuery);
            stmt.close();
        } catch (SQLException e) {
            PUtility.showError(e.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                DiscountClassify dialog = new DiscountClassify(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntExit;
    private javax.swing.JButton bntOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
